<!DOCTYPE html>
<html>
    <head>
        <title>Runboat builds</title>
        <style>
            body {
                font-family: Arial, Helvetica, sans-serif;
            }
            .repo-group {
                margin-bottom: 1em;
                border: 1px solid #ddd;
                border-radius: 0.5em;
                padding: 0.5em;
            }
            .repo-title {
                font-weight: bold;
                font-size: 1.1em;
                margin-bottom: 0.5em;
                color: #333;
            }
            .row {
                display: flex;
                flex-direction: row;
                border-style: none none solid none;
                border-width: thin;
                border-color: lightgray;
                margin-bottom: 0.5em;
            }
            .branch-title {
                font-weight: bold;
                font-size: 0.9em;
                margin-bottom: 0.25em;
                color: #666;
                width: 100%;
            }
            runboat-build {
                margin: 0.25em;
            }
            #footer {
                color: gray;
                font-size: small;
            }
        </style>
    </head>
    <body>
        <div id="builds">Connecting...</div>
        <div id="footer">
            {{ footer_html }}
            {{ additional_footer_html }}
        </div>
        <script type="module">
            import {RunboatBuildElement} from './runboat-build-element.js'
            customElements.define('runboat-build', RunboatBuildElement);

            var evtSource = null;

            function onopen(event) {
                console.log("connected");
                document.getElementById("builds").innerHTML = '';
            }

            function onmessage(event) {
                var oEvent = JSON.parse(event.data);
                var buildElement = document.getElementById(oEvent.build.name);
                if (oEvent.event == "upd") {
                    if (buildElement) {
                        // update build element
                        buildElement.build = oEvent.build;
                    } else {
                        const repo = oEvent.build.commit_info.repo;
                        const branch = oEvent.build.commit_info.target_branch;
                        
                        // Get or create repo group
                        var repoGroupId = `repo-${repo.replace(/[^a-zA-Z0-9]/g, '-')}`;
                        var repoGroupElement = document.getElementById(repoGroupId);
                        if (!repoGroupElement) {
                            repoGroupElement = document.createElement("div");
                            repoGroupElement.classList.add("repo-group");
                            repoGroupElement.id = repoGroupId;
                            
                            const repoTitle = document.createElement("div");
                            repoTitle.classList.add("repo-title");
                            repoTitle.textContent = repo;
                            repoGroupElement.appendChild(repoTitle);
                            
                            const buildsElement = document.getElementById("builds");
                            buildsElement.insertBefore(repoGroupElement, buildsElement.firstChild);
                        }
                        
                        // Get or create branch row within repo group
                        var rowId = `${repoGroupId}-branch-${branch.replace(/[^a-zA-Z0-9]/g, '-')}`;
                        if (oEvent.build.commit_info.pr) {
                            rowId += `-pr-${oEvent.build.commit_info.pr}`;
                        }
                        var rowElement = document.getElementById(rowId);
                        if (!rowElement) {
                            // create branch title and row
                            const branchTitle = document.createElement("div");
                            branchTitle.classList.add("branch-title");
                            branchTitle.textContent = `${branch}${oEvent.build.commit_info.pr ? ` (PR #${oEvent.build.commit_info.pr})` : ''}`;
                            
                            rowElement = document.createElement("div");
                            rowElement.classList.add("row");
                            rowElement.id = rowId;
                            
                            repoGroupElement.appendChild(branchTitle);
                            repoGroupElement.appendChild(rowElement);
                        }
                        
                        // add build element to row
                        buildElement = document.createElement("runboat-build");
                        buildElement.id = oEvent.build.name;
                        buildElement.build = oEvent.build;
                        rowElement.insertBefore(buildElement, rowElement.firstChild);
                    }
                } else if (oEvent.event == "del") {
                    if (buildElement) {
                        buildElement.remove();
                    }
                }
            }

            function onerror(event) {
                evtSource.close();
                console.log("error, will attempt to reconnect");
                setTimeout(connect, 10000);
            }

            function connect() {
                console.log("connecting...")
                var url = `/api/v1/build-events${window.location.search}`
                evtSource = new EventSource(url);
                evtSource.onopen = onopen;
                evtSource.onmessage = onmessage;
                evtSource.onerror = onerror;
            }

            connect();
        </script>
    </body>
</html>